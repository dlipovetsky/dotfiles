{
    // "[go]": {
    //     "editor.codeActionsOnSave": {
    //         "source.organizeImports": "explicit"
    //     },
    //     "editor.formatOnSave": true,
    //     "editor.formatOnSaveMode": "modificationsIfAvailable",
    // },
    // "go.goroot": "/home/dlipovetsky/.local/share/go/1.21.5",
    // If go.gopath is undefined, vscode-go will use $HOME/go
    "go.gopath": "/home/dlipovetsky/.local/share/go",
    "breadcrumbs.enabled": true,
    "cSpell.allowCompoundWords": true,
    "cSpell.userWords": [
        "capi",
        "CAPVCD",
        "centos",
        "clusterctl",
        "containerd",
        "Distro",
        "etcd",
        "kommander",
        "konvoy",
        "kubeadm",
        "kubebuilder",
        "kubernetes",
        "mate",
        "toolchain",
        "xenial"
    ],
    "debug.console.fontSize": 11,
    "editor.bracketPairColorization.enabled": true,
    "editor.fontFamily": "'0xProto','Fira Code','JetBrains Mono', 'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'",
    "editor.fontWeight": "450",
    "editor.fontSize": 11,
    "editor.fontLigatures": false,
    "editor.guides.bracketPairs": true,
    "editor.lineHeight": 1.7,
    "editor.minimap.enabled": false,
    "editor.mouseWheelScrollSensitivity": 1.8,
    "editor.renderWhitespace": "all",
    "editor.rulers": [
        {
            "column": 120
        }
    ],
    "editor.stickyTabStops": true,
    "editor.suggest.showStatusBar": true,
    "editor.wordWrap": "bounded",
    "[markdown]": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 80,
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        }
    },
    "errorLens.fontStyleItalic": true,
    "eslint.alwaysShowStatus": true,
    "eslint.lintTask.enable": true,
    "eslint.run": "onSave",
    "explorer.autoReveal": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "extensions.ignoreRecommendations": false,
    "files.associations": {
        "*.dockerfile": "dockerfile",
        "**/i3/config": "i3",
        "Dockerfile.*": "dockerfile",
        "Tiltfile": "python",
        "*.make": "makefile",
        "*.script": "shellscript"
    },
    "files.autoSave": "afterDelay",
    "files.eol": "\n",
    "files.exclude": {
        "**/.history": true
    },
    "files.watcherExclude": {
        "**/.history/**": true
    },
    "git-graph.repository.commits.showSignatureStatus": true,
    "git-graph.repository.sign.commits": true,
    "git-graph.repository.sign.tags": true,
    "git.allowForcePush": true,
    "git.alwaysSignOff": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.enableCommitSigning": true,
    "git.pullTags": false,
    "git.untrackedChanges": "separate",
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false
    },
    "gitlens.codeLens.recentChange.enabled": false,
    "gitlens.views.repositories.files.layout": "list",
    "go.installDependenciesWhenBuilding": false,
    "go.lintTool": "golangci-lint",
    // "go.testEnvVars": {
    //     "ACK_GINKGO_DEPRECATIONS": "1.16.5",
    //     "KUBEBUILDER_ASSETS": "/home/dlipovetsky/.local/share/kubebuilder-envtest/k8s/1.25.0-linux-amd64",
    // },
    "go.testFlags": [
        // Verbose logs
        "-v",
        // Force go to skip the build cache for tests, see https://stackoverflow.com/a/48882892
        "-count=1",
        // Enable data race detection
        "-race"
    ],
    "go.useLanguageServer": true,
    "gopls": {
        "ui.semanticTokens": true, // Enabling this because I'm getting "[error] semantictokens are disabled: Error: semantictokens are disabled" all the time! (Dec 29 2023)
        "ui.documentation.linkTarget": "pkg.go.dev",
        "ui.documentation.linksInHover": true,
        "formatting.gofumpt": true,
        "ui.completion.usePlaceholders": false,
        "ui.navigation.importShortcut": "Definition",
        "verboseOutput": true,
        "build.buildFlags": [
            "-tags=e2e"
        ],
    },
    "markdown-toc.depthFrom": 2,
    // workaround for right-click context menu selection made unexpectedly (https://github.com/microsoft/vscode/issues/113175)
    "markdown-toc.updateOnSave": false,
    "markdown.extension.orderedList.autoRenumber": false,
    "markdown.extension.showExplorer": true,
    "markdown.extension.toc.githubCompatibility": true,
    "markdown.extension.toc.levels": "2..6",
    "markdown.preview.breaks": true,
    "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
    "markdown.preview.lineHeight": 1.5,
    "markdown.preview.openMarkdownLinks": "inEditor",
    "markdownlint.config": {
        "MD004": {
            "style": "dash"
        },
        "MD007": {
            "indent": 4
        },
        "MD010": {
            "code_blocks": false,
        },
        "MD024": {
            "allow_different_nesting": true
        },
        "MD030": {
            "ol_multi": 2,
            "ul_multi": 2
        },
        "MD033": {
            "allowed_elements": [
                "code",
                "p",
                "strong"
            ]
        },
        "MD046": {
            "style": "consistent"
        }
    },
    "markdownlint.ignore": [
        ".vscode/notes.md"
    ],
    "markdownlint.run": "onSave",
    "mergeEditor.showCheckboxes": true,
    "plantuml.render": "PlantUMLServer",
    "plantuml.server": "http://localhost:50080",
    "quickNotes.fileName": "./.vscode/notes.md",
    "redhat.telemetry.enabled": false,
    "rewrap.wrappingColumn": 120,
    "search.enableSearchEditorPreview": true,
    "search.exclude": {
        "**/.git": true,
        "**/bower_components": true,
        "**/node_modules": true
    },
    "search.showLineNumbers": true,
    "security.workspace.trust.untrustedFiles": "open",
    "shebang.associations": [
        {
            "language": "shellscript",
            "pattern": "^#!.*bash$"
        }
    ],
    "telemetry.telemetryLevel": "crash",
    "terminal.integrated.fontSize": 11,
    "terraform.indexing": {
        "delay": 500,
        "enabled": false,
        "exclude": [
            ".terraform/**/*",
            "**/.terraform/**/*"
        ],
        "liveIndexing": false
    },
    "todo-tree.filtering.useBuiltInExcludes": "file excludes",
    "todo-tree.general.tags": [
        "BUG",
        "HACK",
        "FIXME",
        "TODO",
        "XXX",
        "[ ]",
        "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "todo-tree.tree.showScanModeButton": false,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "vim.camelCaseMotion.enable": true,
    // I use metaGo instead of easymotion.
    "vim.easymotion": false,
    "vim.easymotionMarkerBackgroundColor": "white",
    "vim.easymotionMarkerForegroundColorOneChar": "black",
    "vim.easymotionMarkerForegroundColorTwoCharFirst": "black",
    "vim.easymotionMarkerForegroundColorTwoCharSecond": "black",
    "vim.handleKeys": {
        "<C-v>": true,
        // I want to use C-r to access recent files.
        "<C-r>": false,
    },
    "vim.hlsearch": false,
    "vim.incsearch": true,
    "vim.leader": "<space>",
    "vim.normalModeKeyBindingsNonRecursive": [
        // FIXME Workaround from https://github.com/VSCodeVim/Vim/issues/8157#issuecomment-1426704638
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "C-r"
            ],
            "commands": [
                "redo"
            ]
        },
        // I prefer using 'U' to C-r
        {
            "before": [
                "U"
            ],
            "commands": [
                "redo"
            ]
        },
    ],
    "vim.overrideCopy": true,
    "vim.sneak": true,
    "vim.textwidth": 120,
    "vim.useCtrlKeys": false,
    "vim.useSystemClipboard": true,
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            // Normally, when you paste, whatever you replace is yanked.
            // (See https://stackoverflow.com/a/25267180. for explanation).
            // I do not want a paste to yank whatever I replace.
            // These re-mappings re-select whatever you have just pasted,
            // and yank it.
            // (See https://stackoverflow.com/a/5093286 for explanation).
            "after": [
                "p",
                "g",
                "v",
                "y"
            ],
            "before": [
                "p"
            ]
        },
        {
            "after": [
                "P",
                "g",
                "v",
                "y"
            ],
            "before": [
                "P"
            ]
        }
    ],
    "window.autoDetectColorScheme": true,
    "window.title": "${dirty}${rootNameShort}${separator}${activeEditorLong}${separator}${appName}",
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.editor.splitInGroupLayout": "vertical",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb",
        "git-rebase-todo": "gitlens.rebase"
    },
    "workbench.preferredDarkColorTheme": "Default High Contrast",
    "workbench.preferredLightColorTheme": "Light High Contrast Theme",
    // do not show welcome page on startup
    "workbench.startupEditor": "none",
    "workspaceSidebar.folder": "/home/dlipovetsky/.local/vscode-workspaces",
    // Disabled globally, until it is possible to disable for certain files (https://github.com/redhat-developer/vscode-yaml/issues/245)
    "yaml.schemaStore.enable": false,
    "yaml.validate": false,
    "zenMode.centerLayout": false,
    "zenMode.hideLineNumbers": false,
    "terminal.integrated.scrollback": 2000,
    "git-graph.commitDetailsView.location": "Docked to Bottom",
    "workbench.reduceMotion": "on",
    "githubPullRequests.ignoredPullRequestBranches": [
        "master",
        "main"
    ],
    "githubPullRequests.pullBranch": "never",
    "githubPullRequests.queries": [
        {
            "label": "Waiting For My Review",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "Assigned To Me",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "Created By Me",
            "query": "is:open author:${user}"
        }
    ],
    "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
    "comments.openView": "never",
    "markdown-preview-github-styles.colorTheme": "system",
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": "text.html.markdown.journal.task.open.bullet",
                "settings": {
                    "foreground": "#CC3300"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.open.marker",
                "settings": {
                    "foreground": "#CC3300"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.open.keyword",
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.open.text",
                "settings": {}
            },
            {
                "scope": "text.html.markdown.journal.task.completed.keyword",
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.completed.marker",
                "settings": {
                    "foreground": "#AAAAAA"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.completed.text",
                "settings": {
                    "foreground": "#AAAAAA"
                }
            },
            {
                "scope": "text.html.markdown.journal.task.completed.bullet",
                "settings": {
                    "foreground": "#CC3300"
                }
            },
            {
                "scope": "text.html.markdown.journal.memo.keyword",
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": "text.html.markdown.journal.memo.bullet",
                "settings": {
                    "foreground": "#CC3300"
                }
            },
            {
                "scope": "text.html.markdown.journal.scope",
                "settings": {
                    "foreground": "#CC3300"
                }
            },
            {
                "scope": "text.html.markdown.journal.link.keyword",
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": "text.html.markdown.journal.link.bullet",
                "settings": {
                    "foreground": "#CC3300"
                }
            }
        ]
    },
    "workbench.iconTheme": "vscode-icons",
    "vsicons.dontShowNewVersionMessage": true,
    "go.testTimeout": "300s",
    "shellcheck.customArgs": [
        "--external-sources"
    ],
    "[Log]": {
        "editor.largeFileOptimizations": true
    },
    "editor.stickyScroll.enabled": true,
    "editor.suggest.matchOnWordStartOnly": false,
    "workbench.colorTheme": "Visual Studio Light - C++",
    "go.toolsEnvVars": {
        // Disable CGO optimizations to facilitate debugging. Delve logs a warning if this is not an empty string.
        "CGO_CFLAGS": "",
    },
    "githubPullRequests.createOnPublishBranch": "never",
    "docker.images.sortBy": "Size",
    "docker.images.description": [
        "CreatedTime",
        "Size"
    ],
    "gitlens.plusFeatures.enabled": false,
    "gitlens.statusBar.enabled": false,
    "gitlens.statusBar.pullRequests.enabled": false,
    "gitlens.graph.dimMergeCommits": true,
    "gitlens.blame.format": "${author|20-} - ${message|50?} ${agoOrDate|14-}",
    "amVim.bindCtrlCommands": false,
    "amVim.smartRelativeLineNumbers": true,
    "amVim.useSystemClipboard": true,
    "amVim.vimStyleNavigationInListView": false,
    "gitlens.keymap": "none",
    "metaGo.decoration.backgroundOpacity": "1.0",
    "amVim.mimicVimSearchBehavior": false,
    "gotoNextPreviousMember.symbolKinds": [
        "function",
        "method",
    ],
    "git.openRepositoryInParentFolders": "never",
    "cmake.configureOnOpen": true,
    "shellformat.flag": "--simplify --indent=2",
    "yaml.format.printWidth": 120,
    "spellright.documentTypes": [
        "markdown",
        "latex",
        "plaintext"
    ],
    "editor.wordWrapColumn": 120,
    "debug.toolBarLocation": "docked",
    "workbench.panel.defaultLocation": "right",
    "markdown.preview.fontSize": 13,
    "terminal.integrated.hideOnStartup": "whenEmpty",
    "window.zoomLevel": 2,
    "gitlens.graph.minimap.enabled": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "git.mergeEditor": true,
    "editor.mouseWheelZoom": true,
    "cmake.showOptionsMovedNotification": false,
    "go.coverOnSingleTest": true,
    "go.coverOnSingleTestFile": true,
    "[go]": {
        "editor.insertSpaces": false,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "editor.hover.delay": 150,
    "editor.hover.hidingDelay": 10,
    "window.titleBarStyle": "custom",
    "window.dialogStyle": "custom",
    "window.commandCenter": false,
    "window.density.editorTabHeight": "compact",
    "editor.stickyScroll.maxLineCount": 6,
    "window.newWindowProfile": "dlipovetsky",
    "window.newWindowDimensions": "maximized",
    // Clean up the outline view.
    // "outline.showArrays": false,
    // "outline.showBooleans": false,
    // "outline.showConstants": false,
    // "outline.showEnumMembers": false,
    // "outline.showEnums": false,
    // "outline.showEvents": false,
    // "outline.showConstructors": false,
    // "outline.showFields": false,
    // "outline.showFiles": false,
    // "outline.showInterfaces": false,
    // "outline.showKeys": false,
    // "outline.showModules": false,
    // "outline.showNamespaces": false,
    // "outline.showNull": false,
    // "outline.showNumbers": false,
    // "outline.showObjects": false,
    // "outline.showOperators": false,
    // "outline.showPackages": false,
    // "outline.showProperties": false,
    // "outline.showStrings": false, // Required to show Markdown outlines.
    // "outline.showStructs": false,
    // "outline.showTypeParameters": false,
    // "outline.showVariables": false,
}
